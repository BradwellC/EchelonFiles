# You can use it to add commands that run after AeroSpace startup.
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 10
    inner.vertical =   10
    outer.left =       10
    outer.bottom =     10
    outer.top =        10
    outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
    #                   sectionSign (ISO keyboards only, european keyboards only)
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    alt-slash = 'layout tiles horizontal vertical'
    alt-comma = 'layout accordion horizontal vertical'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    alt-h = 'focus left'
    alt-j = 'focus down'
    alt-k = 'focus up'
    alt-l = 'focus right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    alt-shift-h = 'move left'
    alt-shift-j = 'move down'
    alt-shift-k = 'move up'
    alt-shift-l = 'move right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    alt-minus = 'resize smart -50'
    alt-equal = 'resize smart +50'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    alt-a = 'workspace A' # Affinity Programs
    alt-b = 'workspace B' # Browsers
    alt-c = 'workspace C' # Calendar
    alt-d = 'workspace D' # Docker
    alt-e = 'workspace E' # Elgato
    alt-f = 'workspace F' # Figma
    alt-g = 'workspace G' # Steam / Games
    alt-m = 'workspace M' # Mail
    alt-n = 'workspace N' # Obsidian
    alt-p = 'workspace P' # Reminders / Todoist
    alt-r = 'workspace R' # Recording
    alt-s = 'workspace S' # Streaming
    alt-t = 'workspace T' # Terminal
    alt-v = 'workspace V' # DaVinci Resolve
    alt-w = 'workspace W' # WPS / Windows / Apple Docs
    alt-z = 'workspace Z' # System Files

    alt-i = 'workspace I'
    alt-o = 'workspace O' 
    alt-q = 'workspace Q'
    alt-u = 'workspace U'
    alt-x = 'workspace X'
    alt-y = 'workspace Y'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    alt-shift-a = 'move-node-to-workspace A'
    alt-shift-b = 'move-node-to-workspace B'
    alt-shift-c = 'move-node-to-workspace C'
    alt-shift-d = 'move-node-to-workspace D'
    alt-shift-e = 'move-node-to-workspace E'
    alt-shift-f = 'move-node-to-workspace F'
    alt-shift-g = 'move-node-to-workspace G'
    alt-shift-i = 'move-node-to-workspace I'
    alt-shift-m = 'move-node-to-workspace M'
    alt-shift-n = 'move-node-to-workspace N'
    alt-shift-o = 'move-node-to-workspace O'
    alt-shift-p = 'move-node-to-workspace P'
    alt-shift-q = 'move-node-to-workspace Q'
    alt-shift-r = 'move-node-to-workspace R'
    alt-shift-s = 'move-node-to-workspace S'
    alt-shift-t = 'move-node-to-workspace T'
    alt-shift-u = 'move-node-to-workspace U'
    alt-shift-v = 'move-node-to-workspace V'
    alt-shift-w = 'move-node-to-workspace W'
    alt-shift-x = 'move-node-to-workspace X'
    alt-shift-y = 'move-node-to-workspace Y'
    alt-shift-z = 'move-node-to-workspace Z'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    alt-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

    alt-shift-h = ['join-with left', 'mode main']
    alt-shift-j = ['join-with down', 'mode main']
    alt-shift-k = ['join-with up', 'mode main']
    alt-shift-l = ['join-with right', 'mode main']

    down = 'volume down'
    up = 'volume up'
    shift-down = ['volume set 0', 'mode main']

# Workspaces Config

# Workspace A - Affinity Programs
[[on-window-detected]]
  if.app-id = 'com.seriflabs.affinitydesigner2'
  run = ['layout floating', 'move-node-to-workspace A']

[[on-window-detected]]
  if.app-id = 'com.seriflabs.affinityphoto2'
  run = ['layout floating', 'move-node-to-workspace A']

# Workspace B - Browser
[[on-window-detected]]
  if.app-id = 'com.microsoft.edgemac'
  run = 'move-node-to-workspace B'

[[on-window-detected]]
  if.app-id = 'com.apple.Safari'
  run = "move-node-to-workspace B"

# Workspace C - Calendar
[[on-window-detected]]
  if.app-id = 'com.apple.iCal'
  run = 'move-node-to-workspace C'

[[on-window-detected]]
  if.app-id = 'com.flexibits.fantastical2.mac'
  run = 'move-node-to-workspace C'

# Workspace D - Docker / Discord
[[on-window-detected]]
  if.app-id = 'com.electron.dockerdesktop'
  run = 'move-node-to-workspace D'

[[on-window-detected]]
  if.app-id = 'com.hnc.Discord'
  run = 'move-node-to-workspace D'

# Workspace E - Elgato Programs
[[on-window-detected]]
  if.app-id = 'com.elgato.WaveLink'
  run = ['layout floating', 'move-node-to-workspace E']

[[on-window-detected]]
  if.app-id = 'com.elgato.StreamDesk'
  run = ['layout floating', 'move-node-to-workspace E']

[[on-window-detected]]
  if.app-id = 'com.elgato.CameraHub'
  run = ['layout floating', 'move-node-to-workspace E']

# Workspace F - Figma
[[on-window-detected]]
  if.app-id = 'com.figma.Desktop'
  run = 'move-node-to-workspace F'

# Workspace G - Games
[[on-window-detected]]
  if.app-id = 'com.valvesoftware.steam'
  run = 'move-node-to-workspace G'

[[on-window-detected]]
  if.app-id = 'com.mojang.minecraftlauncher'
  run = 'move-node-to-workspace G'

# Workspace M - Mail
[[on-window-detected]]
  if.app-id = 'com.apple.mail'
  run = 'move-node-to-workspace M'

# Workspae N - Obsidian
[[on-window-detected]]
  if.app-id = 'md.obsidian'
  run = [ 'layout floating', 'move-node-to-workspace N']

# Workspace P - Reminders / Todoist
[[on-window-detected]]
  if.app-id = 'com.apple.reminders'
  run = 'move-node-to-workspace P'

[[on-window-detected]]
  if.app-id = 'com.todoist.mac.Todoist'
  run = 'move-node-to-workspace P'

# Workspace R - Recording 
[[on-window-detected]]
  if.app-id = 'com.obsproject.obs-studio'
  run = 'move-node-to-workspace R'

# Workspace S - Streaming 
[[on-window-detected]]
  if.app-id = 'com.streamlab.slobs'
  run = 'move-node-to-workspace S'

# Workspace T - Terminal
[[on-window-detected]]
  if.app-id = 'com.mitchellh.ghostty'
  run = "move-node-to-workspace T"

# Workspace W - Microsoft Programs
[[on-window-detected]]
  if.app-id = 'com.microsoft.Word'
  run = "move-node-to-workspace W"

[[on-window-detected]]
  if.app-id = 'com.microsoft.Powerpoint'
  run = "move-node-to-workspace W"

[[on-window-detected]]
  if.app-id = 'com.kingsoft.wpsoffice.mac.global'
  run = "move-node-to-workspace W"

[[on-window-detected]]
  if.app-id = 'com.microsoft.Excel'
  run = "move-node-to-workspace W"

# Workspace V - DaVinci Resolve
[[on-window-detected]]
  if.app-id = 'com.blackmagic-design.DaVinciResolve'
  run = 'move-node-to-workspace V'

  # Workspace Z - System
[[on-window-detected]]
  if.app-id = 'com.bitwarden.desktop'
  run = ['layout floating', 'move-node-to-workspace Z']

[[on-window-detected]]
  if.app-id = 'com.apple.systempreference'
  run = ['layout floating', 'move-node-to-workspace Z']

[[on-window-detected]]
  if.app-id = 'com.apple.finder'
  run = ['layout floating', 'move-node-to-workspace Z']

[[on-window-detected]]
  if.app-id = 'org.yanex.marta'
  run = ['layout floating', 'move-node-to-workspace Z']

[[on-window-detected]]
  if.app-id = 'com.nordvpn.macos'
  run = ['layout floating', 'move-node-to-workspace Z']

[[on-window-detected]]
  if.app-id = 'com.apple.MobileSMS'
  run = ['layout floating', 'move-node-to-workspace Z']

# No Workspace 
[[on-window-detected]]
  if.app-id = 'net.freemacsoft.Appcleaner'
  run = 'layout floating'

[[on-window-detected]]
  if.app-id = 'com.apple.Music'
  run = 'layout floating'

[[on-window-detected]]
  if.app-id = 'com.logi.ghub.agent'
  run = 'layout floating'

[workspace-to-monitor-force-assignment]
# Left Monitor - Main

  G = 1
  T = 1
  W = 1

  I = 1
  O = 1
  Q = 1

# Right Monitor

  A = 3
  B = 3
  V = 3
  
  U = 3
  X = 3
  Y = 3

# Built-in Display
  
  C = 2
  D = 2
  E = 2
  F = 2

  M = 2  
  P = 2
  R = 2
  S = 2
  Z = 2
